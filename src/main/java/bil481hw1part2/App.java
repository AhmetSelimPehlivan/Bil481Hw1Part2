/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package bil481hw1part2;

import java.util.ArrayList;
import static spark.Spark.get;
import static spark.Spark.port;
import static spark.Spark.post;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import spark.ModelAndView;
import spark.template.mustache.MustacheTemplateEngine;

public class App {
    public static int sumOfValuesTwoArray(ArrayList<Integer> aListFirst, int firstIndex,ArrayList<Integer> aListSecond, int secondIndex)throws Exception{
        if (aListFirst == null || aListSecond == null){
            throw new Exception("Array is null.");
        }
        else if(aListFirst.size() <= firstIndex || aListSecond.size() <= secondIndex){
            throw new Exception("Index out of bound.");
        }
        else{
            return aListFirst.get(firstIndex)+aListSecond.get(secondIndex);
        }
      }
    public static void main(String[] args) {
        get("/", (req, res) -> "Welcome To 2 Value Calculator From Array !");

        post("/compute", (req, res) -> {

          String input1 = req.queryParams("input1");
          java.util.Scanner sc1 = new java.util.Scanner(input1);
          sc1.useDelimiter("[;\r\n]+");
          ArrayList<Integer> inputList = new ArrayList<>();
          while (sc1.hasNext())
          {
            int value = Integer.parseInt(sc1.next().replaceAll("\\s",""));
            inputList.add(value);
          }
          System.out.println(inputList);    ////

          String input2 = req.queryParams("input2").replaceAll("\\s","");
          int input1AsInt = Integer.parseInt(input2);
          sc1.close();

          String input3 = req.queryParams("input3");
          java.util.Scanner sc2 = new java.util.Scanner(input3);
          sc1.useDelimiter("[;\r\n]+");
          ArrayList<Integer> inputList2 = new ArrayList<>();
          while (sc2.hasNext())
          {
            int value = Integer.parseInt(sc2.next().replaceAll("\\s",""));
            inputList2.add(value);
          }
          System.out.println(inputList2);

          String input4 = req.queryParams("input4").replaceAll("\\s","");
          int input2AsInt = Integer.parseInt(input4);
          sc2.close();
          

          int result =sumOfValuesTwoArray(inputList, input1AsInt, inputList2, input2AsInt);

          Map<String, Integer> map = new HashMap<String, Integer>();
          map.put("result", result);
          return new ModelAndView(map, "compute.mustache");
        }, new MustacheTemplateEngine());

        get("/compute",
        (rq, rs) -> {
          Map<String, String> map = new HashMap<String, String>();
          map.put("result", "not computed yet!");
          return new ModelAndView(map, "compute.mustache");
        },
        new MustacheTemplateEngine());
    }
}
